{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","DynatraceDatasourceQueryCtrl","$scope","$injector","scope","target","aggregation","detail","updateMetricDetails","datasource","metricFindQuery","query","dimension","getEntities","metricFindDetails","then","res","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;AAGYC,kC;;;AACnB,8CAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,kKACvBD,MADuB,EACfC,SADe;;AAG7B,gBAAKC,KAAL,GAAaF,MAAb;AACA,gBAAKG,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,eAA3C;AACA,gBAAKA,MAAL,CAAYC,WAAZ,GAA0B,MAAKD,MAAL,CAAYC,WAAZ,IAA2B,oBAArD;;AAEA,gBAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,EAA3C;;AAEA,gBAAKC,mBAAL,CAAyB,MAAKH,MAAL,CAAYA,MAArC;AAT6B;AAU9B;;;;0CAEe;AACd,mBAAO,KAAKI,UAAL,CAAgBC,eAAhB,EAAP;AACD;;;sCAEWC,K,EAAOC,S,EAAW;AAC5B,mBAAO,KAAKH,UAAL,CAAgBI,WAAhB,CAA4BF,KAA5B,EAAmCC,SAAnC,CAAP;AACD;;;8CAEmBD,K,EAAO;AAAA;;AACzB,iBAAKF,UAAL,CAAgBK,iBAAhB,CAAkCH,KAAlC,EAAyCI,IAAzC,CAA8C,UAACC,GAAD,EAAS;AACrD,qBAAKX,MAAL,CAAYE,MAAZ,GAAqBS,GAArB;AACD,aAFD;AAGD;;;2CAEgBL,K,EAAO;AACtB,iBAAKH,mBAAL,CAAyBG,KAAzB;AACA,iBAAKM,SAAL,CAAeC,OAAf;AACD;;;;QA9BuDlB,S;;yBAArCC,4B;;AAiCrBA,mCAA6BkB,WAA7B,GAA2C,4BAA3C","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!';\n\nexport default class DynatraceDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.target = this.target.target || 'select metric';\n    this.target.aggregation = this.target.aggregation || 'select aggregation';\n\n    this.target.detail = this.target.detail || {};\n\n    this.updateMetricDetails(this.target.target);\n  }\n\n  getMetricList() {\n    return this.datasource.metricFindQuery();\n  }\n\n  getEntities(query, dimension) {\n    return this.datasource.getEntities(query, dimension);\n  }\n\n  updateMetricDetails(query) {\n    this.datasource.metricFindDetails(query).then((res) => {\n      this.target.detail = res;\n    });\n  }\n\n  onChangeInternal(query) {\n    this.updateMetricDetails(query);\n    this.panelCtrl.refresh();\n  }\n}\n\nDynatraceDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}